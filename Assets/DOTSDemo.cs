//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/DOTSDemo.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DOTSDemo: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DOTSDemo()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DOTSDemo"",
    ""maps"": [
        {
            ""name"": ""DemoBindings"",
            ""id"": ""c497e6dc-6a73-49d6-be63-08f45141c823"",
            ""actions"": [
                {
                    ""name"": ""PlayerMove"",
                    ""type"": ""Value"",
                    ""id"": ""ffb91dc0-8cbd-40e0-877c-e9b5989caf11"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerFire"",
                    ""type"": ""Button"",
                    ""id"": ""8508b225-f02b-46da-9b0f-8f354c7eb8bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GetRandomInt"",
                    ""type"": ""Button"",
                    ""id"": ""a7d4562b-556c-4f26-838d-38e1d9babe8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GetRandomFloat"",
                    ""type"": ""Button"",
                    ""id"": ""d9e452bb-77b4-4809-a3b5-8342f6f2a87c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""c7afe516-efa2-4de8-a7db-d1ded0447184"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""02e93d39-629c-4352-b166-7d83447eb7d4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d86f2871-b8bc-46d8-ad36-2b097deb5457"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c5e17780-857e-4739-bb1f-86ea79dbe364"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""730fbab9-184a-4967-b32f-b563d7784cd8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""80e302bc-4d7f-49aa-a517-7c6b7b3acdf1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e84f131b-8b83-4235-abc2-c713ed2cebed"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetRandomInt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f59909d-d7e4-43b6-afb9-4bbfb8b211ad"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetRandomFloat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // DemoBindings
        m_DemoBindings = asset.FindActionMap("DemoBindings", throwIfNotFound: true);
        m_DemoBindings_PlayerMove = m_DemoBindings.FindAction("PlayerMove", throwIfNotFound: true);
        m_DemoBindings_PlayerFire = m_DemoBindings.FindAction("PlayerFire", throwIfNotFound: true);
        m_DemoBindings_GetRandomInt = m_DemoBindings.FindAction("GetRandomInt", throwIfNotFound: true);
        m_DemoBindings_GetRandomFloat = m_DemoBindings.FindAction("GetRandomFloat", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DemoBindings
    private readonly InputActionMap m_DemoBindings;
    private List<IDemoBindingsActions> m_DemoBindingsActionsCallbackInterfaces = new List<IDemoBindingsActions>();
    private readonly InputAction m_DemoBindings_PlayerMove;
    private readonly InputAction m_DemoBindings_PlayerFire;
    private readonly InputAction m_DemoBindings_GetRandomInt;
    private readonly InputAction m_DemoBindings_GetRandomFloat;
    public struct DemoBindingsActions
    {
        private @DOTSDemo m_Wrapper;
        public DemoBindingsActions(@DOTSDemo wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMove => m_Wrapper.m_DemoBindings_PlayerMove;
        public InputAction @PlayerFire => m_Wrapper.m_DemoBindings_PlayerFire;
        public InputAction @GetRandomInt => m_Wrapper.m_DemoBindings_GetRandomInt;
        public InputAction @GetRandomFloat => m_Wrapper.m_DemoBindings_GetRandomFloat;
        public InputActionMap Get() { return m_Wrapper.m_DemoBindings; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DemoBindingsActions set) { return set.Get(); }
        public void AddCallbacks(IDemoBindingsActions instance)
        {
            if (instance == null || m_Wrapper.m_DemoBindingsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DemoBindingsActionsCallbackInterfaces.Add(instance);
            @PlayerMove.started += instance.OnPlayerMove;
            @PlayerMove.performed += instance.OnPlayerMove;
            @PlayerMove.canceled += instance.OnPlayerMove;
            @PlayerFire.started += instance.OnPlayerFire;
            @PlayerFire.performed += instance.OnPlayerFire;
            @PlayerFire.canceled += instance.OnPlayerFire;
            @GetRandomInt.started += instance.OnGetRandomInt;
            @GetRandomInt.performed += instance.OnGetRandomInt;
            @GetRandomInt.canceled += instance.OnGetRandomInt;
            @GetRandomFloat.started += instance.OnGetRandomFloat;
            @GetRandomFloat.performed += instance.OnGetRandomFloat;
            @GetRandomFloat.canceled += instance.OnGetRandomFloat;
        }

        private void UnregisterCallbacks(IDemoBindingsActions instance)
        {
            @PlayerMove.started -= instance.OnPlayerMove;
            @PlayerMove.performed -= instance.OnPlayerMove;
            @PlayerMove.canceled -= instance.OnPlayerMove;
            @PlayerFire.started -= instance.OnPlayerFire;
            @PlayerFire.performed -= instance.OnPlayerFire;
            @PlayerFire.canceled -= instance.OnPlayerFire;
            @GetRandomInt.started -= instance.OnGetRandomInt;
            @GetRandomInt.performed -= instance.OnGetRandomInt;
            @GetRandomInt.canceled -= instance.OnGetRandomInt;
            @GetRandomFloat.started -= instance.OnGetRandomFloat;
            @GetRandomFloat.performed -= instance.OnGetRandomFloat;
            @GetRandomFloat.canceled -= instance.OnGetRandomFloat;
        }

        public void RemoveCallbacks(IDemoBindingsActions instance)
        {
            if (m_Wrapper.m_DemoBindingsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDemoBindingsActions instance)
        {
            foreach (var item in m_Wrapper.m_DemoBindingsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DemoBindingsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DemoBindingsActions @DemoBindings => new DemoBindingsActions(this);
    public interface IDemoBindingsActions
    {
        void OnPlayerMove(InputAction.CallbackContext context);
        void OnPlayerFire(InputAction.CallbackContext context);
        void OnGetRandomInt(InputAction.CallbackContext context);
        void OnGetRandomFloat(InputAction.CallbackContext context);
    }
}
